AWSTemplateFormatVersion: 2010-09-09
Description: Main template with parameters

Mappings:
  RegionMap:
    ap-northeast-1:
      HostedId: "Z1YSHQZHG15GKL"
      AZs: 'ap-northeast-1a,ap-northeast-1b,ap-northeast-1c'
    ap-northeast-2:
      HostedId: "Z20JF4UZKIW1U8"
      AZs: 'ap-northeast-2a,ap-northeast-2b,ap-northeast-2c'
    ap-northeast-3:
      HostedId: "Z5LXEXXYW11ES"
      AZs: 'ap-northeast-3a,ap-northeast-3b,ap-northeast-3c'
    us-east-2:
      HostedId: "ZOJJZC49E0EPZ"
      AZs: 'us-east-2a,us-east-2b,us-east-2c'
    us-east-1:
      HostedId: "Z1UJRXOUMOOFQ8"
      AZs: 'us-east-1a,us-east-1b,us-east-1c,us-east-1d'
    us-west-1:
      HostedId: "Z2MUQ32089INYE"
      AZs: 'us-west-1a,us-west-1b'
    us-west-2:
      HostedId: "Z2OJLYMUO9EFXC"
      AZs: 'us-west-2a,us-west-2b,us-west-2c,us-west-2d'
    ap-south-1:
      HostedId: "Z3VO1THU9YC4UR"
      AZs: 'ap-south-1a,ap-south-1b,ap-south-1c'
    ap-southeast-1:
      HostedId: "ZL327KTPIQFUL"
      AZs: 'ap-southeast-1a,ap-southeast-1b,ap-southeast-1c'
    ap-southeast-2:
      HostedId: "Z2RPCDW04V8134"
      AZs: 'ap-southeast-2a,ap-southeast-2b,ap-southeast-2c'
    ca-central-1:
      HostedId: "Z19DQILCV0OWEC"
      AZs: 'ca-central-1a,ca-central-1b,ca-central-1d'
    eu-central-1:
      HostedId: "Z1U9ULNL0V5AJ3"
      AZs: 'eu-central-1a,eu-central-1b,eu-central-1c'
    eu-west-1:
      HostedId: "ZLY8HYME6SFDD"
      AZs: 'eu-west-1a,eu-west-1b,eu-west-1c'
    eu-west-2:
      HostedId: "ZJ5UAJN8Y3Z2Q"
      AZs: 'eu-west-2a,eu-west-2b,eu-west-2c'
    eu-west-3:
      HostedId: "Z3KY65QIEKYHQQ"
      AZs: 'eu-west-3a,eu-west-3b,eu-west-3c'
    eu-north-1:
      HostedId: "Z3UWIKFBOOGXPP"
      AZs: 'eu-north-1a,eu-north-1b,eu-north-1c'
    sa-east-1:
      HostedId: "ZCMLWB8V5SYIT"
      AZs: 'sa-east-1a,sa-east-1b,sa-east-1c'
    # ap-east-1:
    #   HostedId: "Z3FD1VL90ND7K5"
    #   AZs: 'ap-east-1a,ap-east-1b,ap-east-1c'
    # me-south-1:
    #   HostedId: "Z20ZBPC0SS8806"

Parameters:
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: techday-2022-2
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Default: "latest/"
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and
      forward slash (/).
    Type: String
  # AdminIngressLocation:
  #   Description: >-
  #     CIDR block (IP address range) to allow SSH access to the bastion host and
  #     HTTPS access to the Kubernetes API. Use 0.0.0.0/0 to allow access from all
  #     locations.
  #   Type: String
  #   Default: 0.0.0.0/0
  #   MinLength: '9'
  #   MaxLength: '18'
  #   AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
  #   ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  # DSActivationCode:
  #   Description: DS key
  #   Type: String
  #   Default: 'DX-XQCT-JQW26-GQ5TS-AZ8KS-3HEWQ-F274C'
  MissionControlAccountId:
    Type: Number
    Default: 728151039736
  # Because EKS takes freaking forever to build, use this toggle to not build it (or build
  # it) as needed to save time on testing. It will be always created for merging test.
  BuildEks:
    Type: String
    AllowedValues: [true, false]
    Default: true

Conditions:
  BuildEks:
    !Equals [true, !Ref BuildEks]

  IsQSS3KeyPrefixNull: 
    !Equals [ !Ref QSS3KeyPrefix, "" ]

Resources:

  adfsStack:
      Type: AWS::CloudFormation::Stack
      Properties:
        Parameters:
          QSS3BucketName: !Ref QSS3BucketName
          QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}challenges/adfs_challenge'
          VPCID: !GetAtt VPCStack.Outputs.VPCID
          PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        TemplateURL:  !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/adfs_challenge/templates/adfs-main.template.yaml'
      DependsOn:
        - VPCStack

  c1csStack:
      Type: AWS::CloudFormation::Stack
      Properties:
        Parameters:
          PlayerServiceCatalogPortfolio: !GetAtt ServiceCatalogPortfolioStack.Outputs.PlayerServiceCatalogPortfolio
          ServiceCatalogLaunchRoleArn: !GetAtt ServiceCatalogPortfolioStack.Outputs.ServiceCatalogLaunchRoleArn
          QSS3BucketName: !Ref QSS3BucketName
          QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}challenges/container_security/'
          GroupAssociationPrincipalArn: !GetAtt PlayerStack.Outputs.PlayerGroupArn
        TemplateURL:  !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/container_security/templates/c1cs_main.template.yaml'
      DependsOn: 
        - PlayerStack
        - ServiceCatalogPortfolioStack
        - OnboardingStack #Added for throttling IAM role creation
  deployC1csAttacks:
    Type: AWS::CloudFormation::Stack
    Condition: BuildEks
    Properties:
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}challenges/container_security/'
        awsAccountID: !Ref "AWS::AccountId"
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/container_security/templates/c1cs_deploy_attack_container.template.yaml'
    DependsOn:
      - EKSStack

  c1wsAVCStack:
      Type: AWS::CloudFormation::Stack
      Properties:
        Parameters:
          PlayerServiceCatalogPortfolio: !GetAtt ServiceCatalogPortfolioStack.Outputs.PlayerServiceCatalogPortfolio
          ServiceCatalogLaunchRoleArn: !GetAtt ServiceCatalogPortfolioStack.Outputs.ServiceCatalogLaunchRoleArn
          QSS3BucketName: !Ref QSS3BucketName
          QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}challenges/workload_security/agentversioncontrol/'
        TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/workload_security/agentversioncontrol/templates/c1ws_avc_main.template.yaml'
      DependsOn: 
        - PlayerStack
        - ServiceCatalogPortfolioStack
        - OnboardingStack #Added for throttling IAM role creation

  c1wsLog4ShellStack:
      Type: AWS::CloudFormation::Stack
      Properties:
        Parameters:
          QSS3BucketName: !Ref QSS3BucketName
          QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}challenges/workload_security/log4shell/'
          VPCID: !GetAtt VPCStack.Outputs.VPCID
          PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
          SNSTopicArn: !GetAtt WorkloadSecurityStack.Outputs.SNSTopicARN
        TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/workload_security/log4shell/templates/c1ws_log4shell_main.template.yaml'
      DependsOn: 
        - PlayerStack
        - ServiceCatalogPortfolioStack
        - OnboardingStack #Added for throttling IAM role creation
        
  FSSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub "${QSS3KeyPrefix}challenges/file_storage_security/"
        PlayerServiceCatalogPortfolio: !GetAtt ServiceCatalogPortfolioStack.Outputs.PlayerServiceCatalogPortfolio
        ServiceCatalogLaunchRoleArn: !GetAtt ServiceCatalogPortfolioStack.Outputs.ServiceCatalogLaunchRoleArn
        PlayerPassword: !GetAtt Passwords.Outputs.PlayerPassword
        PlayerGroupName: !GetAtt PlayerStack.Outputs.PlayerGroupName
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/file_storage_security/templates/main.template.yaml'

  FSSAttackerEnv:
    Type: AWS::CloudFormation::Stack
    Condition: BuildEks
    Properties:
      Parameters:
          QSS3BucketName: !Ref QSS3BucketName
          QSS3KeyPrefix: !Sub "${QSS3KeyPrefix}challenges/file_storage_security/"
          PlayerPassword: !GetAtt Passwords.Outputs.PlayerPassword
      TemplateURL: !Sub "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/file_storage_security/templates/attackerMachine.template.yaml"
    DependsOn:
      - EKSStack

  VOTKStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VPCID: !GetAtt VPCStack.Outputs.VPCID
        PublicSubnetId: !GetAtt VPCStack.Outputs.PublicSubnet1ID
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/vision_one_votk/templates/main.template.yaml'
  
  V1SOStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub "${QSS3KeyPrefix}challenges/vision_one/"
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/vision_one/templates/main.template.yaml' 
      
  WorkloadSecurityStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub ${QSS3KeyPrefix}challenges/workload_security/
        VPCID: !GetAtt VPCStack.Outputs.VPCID
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/workload_security/templates/main.template.yaml'
    DependsOn: 
      - ServiceCatalogPortfolioStack
      - VPCStack
  ############################################ 
  ########## C1WS Service Catalog ########### 
  ############################################
  C1WSNewServiceCatalogProduct:
    Type: AWS::ServiceCatalog::CloudFormationProduct
    Properties:
      Description: Be sure to expand this before tryng Cloud One Workload Security Challenges
      Name: C1WS Initial preparation
      Owner: Trend Micro
      ProvisioningArtifactParameters:
        - Info:
            LoadTemplateFromURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/workload_security/templates/onbording_servicecatalog.yaml
  C1WSNewServicePorfolioProductAssociation:
    Type: AWS::ServiceCatalog::PortfolioProductAssociation
    Properties:
      PortfolioId: !GetAtt ServiceCatalogPortfolioStack.Outputs.PlayerServiceCatalogPortfolio
      ProductId: !Ref C1WSNewServiceCatalogProduct
  C1WSNewServiceLaunchRoleConstraint:
    DependsOn: C1WSNewServicePorfolioProductAssociation
    Type: AWS::ServiceCatalog::LaunchRoleConstraint
    Properties:
      PortfolioId: !GetAtt ServiceCatalogPortfolioStack.Outputs.PlayerServiceCatalogPortfolio
      ProductId: !Ref C1WSNewServiceCatalogProduct
      RoleArn: !GetAtt ServiceCatalogPortfolioStack.Outputs.ServiceCatalogLaunchRoleArn
 
  # SAMPLE: Load Challenges and Infra for Challenges
  # Sample:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     Parameters:
  #       PlayerServiceCatalogPortfolio: !GetAtt ServiceCatalogPortfolioStack.Outputs.PlayerServiceCatalogPortfolio
  #       ServiceCatalogLaunchRoleArn: !GetAtt ServiceCatalogPortfolioStack.Outputs.ServiceCatalogLaunchRoleArn
  #     TemplateURL:  !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/challenges/sample/templates/main.template.yaml'

# Comment Out DSM and DSA Stack - likely unused this year.
#   DSMStack:
#     Type: AWS::CloudFormation::Stack
#     Properties:
#       Parameters:
#         DSActivationCode: !Ref DSActivationCode
#         QSS3BucketName: !Ref QSS3BucketName
#         QSS3KeyPrefix: !Ref QSS3KeyPrefix
#         VPC: !GetAtt VPCStack.Outputs.VPCID
#         PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1ID
# #        ReadS3BucketProfile: !GetAtt Infra.Outputs.ReadS3BucketProfile
#         PlayerPassword: !GetAtt Passwords.Outputs.PlayerPassword
#         SecretPassword: !GetAtt Passwords.Outputs.SecretPassword
#         KeyName: !GetAtt KeyPairStack.Outputs.KeyPairName
#       TemplateURL:  !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}infra/dsm/templates/dsm.template.yaml'

  # DSAStack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     Parameters:
  #       QSS3BucketName: !Ref QSS3BucketName
  #       QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}dsm/'
  #       VPC: !GetAtt VPCStack.Outputs.VPCID
  #       PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
  #       PlayerPassword: !GetAtt Passwords.Outputs.PlayerPassword
  #       SecretPassword: !GetAtt Passwords.Outputs.SecretPassword
  #       DSMFQDN: !GetAtt DSMStack.Outputs.DSMFQDN
  #       KeyName: !GetAtt KeyPairStack.Outputs.KeyPairName
  #       VPCCIDR: !GetAtt VPCStack.Outputs.VPCCIDR
  #     TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/infra/dsm/templates/ds_clients.template.yaml'

  # ☠️ DON'T TOUCH - Or Webster might have a talk with you... or worse, Amanda! ☠️
  QSS3BucketNameSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "QSS3BucketName"
      Value: !Ref QSS3BucketName
      Type: String
  QSS3KeyPrefixSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "QSS3KeyPrefix"
      Value: !If 
        - IsQSS3KeyPrefixNull
        - 'None'
        - !Ref QSS3KeyPrefix
      Type: String

# Storing Parameters in SSM for use by Service Catalog items
  VpcIDSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "VpcID"
      Value: !GetAtt VPCStack.Outputs.VPCID
      Type: String
  PublicSubnetIdSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "PublicSubnet1"
      Value: !GetAtt VPCStack.Outputs.PublicSubnet1ID
      Type: String
  PublicSubnetIdSsm2:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "PublicSubnet2"
      Value: !GetAtt VPCStack.Outputs.PublicSubnet2ID
      Type: String
  keypairSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "keypair"
      Value: !GetAtt KeyPairStack.Outputs.KeyPairName
      Type: String

  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}infra/vpc/templates/aws-vpc.template.yaml'
      Parameters:
        NumberOfAZs: 4
        AvailabilityZones: !FindInMap
          - RegionMap
          - !Ref 'AWS::Region'
          - AZs
        CreateAdditionalPrivateSubnets: 'true'

  Passwords:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}utils/randomstring/randomstring.template.yaml'

  ScoreChecker:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        MissionControlAccountId: !Ref MissionControlAccountId
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}utils/MissionControlChecker/templates/template.yaml'

  EKSStack:
    Condition: BuildEks
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        KeyPairName: !GetAtt KeyPairStack.Outputs.KeyPairName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}infra/eks/'
        QSS3BucketRegion: !Sub ${AWS::Region}
        RemoteAccessCIDR: '0.0.0.0/0'
        AdditionalEKSAdminUserArn: ""
        AdditionalEKSAdminRoleArn: ""
        VPCID: !GetAtt VPCStack.Outputs.VPCID
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt VPCStack.Outputs.PublicSubnet2ID
        PublicSubnet3ID: !GetAtt VPCStack.Outputs.PublicSubnet3ID
        PrivateSubnet1ID: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
        PrivateSubnet3ID: !GetAtt VPCStack.Outputs.PrivateSubnet3AID
        ProvisionBastionHost: "Enabled"
        ALBIngressController: "Enabled"
        EKSPublicAccessEndpoint: "Enabled"
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}infra/eks/templates/amazon-eks-entrypoint-existing-vpc.template.yaml'
    DependsOn: 
      - VPCStack
      - KeyPairStack

  C1PostOnboardTrigger:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        MainStackId: !Ref AWS::StackId
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/c1_postonboard_trigger.template.yaml'

  C1PostOnboardFunctionNameSsmParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "C1PostOnboardFunctionName"
      Value: !GetAtt C1PostOnboardTrigger.Outputs.PostOnboardTriggerLambdaName
      Type: String
  
  V1PostOnboardTrigger:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        MainStackId: !Ref AWS::StackId
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/v1_postonboard_trigger.template.yaml'

  V1PostOnboardFunctionNameSsmParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "V1PostOnboardFunctionName"
      Value: !GetAtt V1PostOnboardTrigger.Outputs.PostOnboardTriggerLambdaName
      Type: String

  LockoutInfraStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        MainStackId: !Ref AWS::StackId
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/lockout_infra.template.yaml'

  ServiceCatalogPortfolioStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/service_catalog_portfolio.template.yaml'
      Parameters:
        GroupAssociationPrincipalArn: !GetAtt PlayerStack.Outputs.PlayerGroupArn

  PlayerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        PlayerPassword: !GetAtt Passwords.Outputs.PlayerPassword
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/player.template.yaml'

  KeyPairStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}utils/ec2keypair/ec2keypair.template.yaml'

#  Day2Resources:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      Parameters:
#        QSS3BucketName: !Ref QSS3BucketName
#        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}'
#      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/templates/day2_main.template.yaml'

  OnboardingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        PlayerServiceCatalogPortfolio: !GetAtt ServiceCatalogPortfolioStack.Outputs.PlayerServiceCatalogPortfolio
        ServiceCatalogLaunchRoleArn: !GetAtt ServiceCatalogPortfolioStack.Outputs.ServiceCatalogLaunchRoleArn
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub ${QSS3KeyPrefix}challenges/
      TemplateURL:  !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/onboarding/templates/main.template.yaml'

Outputs:
  PrivateSubnet2AID:
    Value: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
    Description: PrivateSubnet2A ID

  # DSMURL:
  #   Value: !GetAtt DSMStack.Outputs.DSMURL
  #   Description: DSM Public URL

  # DSMFQDN:
  #   Value: !GetAtt DSMStack.Outputs.DSMFQDN
  #   Description: DSM public FQDN
    
  ScoreCheckerArn:
    Value: !GetAtt ScoreChecker.Outputs.MissionControlNotifierFunctionName
    Description: ScoreChecker function ARN that is going to be invoked by Mission Control.
  
  ScoreCheckerRole:
    Value: !GetAtt ScoreChecker.Outputs.MissionControlNotifierRoleArn
    Description: IAM Role ARN that allows Mission Control to invoke the ScoreChecker function.

  PlayerServiceCatalogPortfolio:
    Value: !GetAtt ServiceCatalogPortfolioStack.Outputs.PlayerServiceCatalogPortfolio

  ServiceCatalogLaunchRoleArn:
    Value: !GetAtt ServiceCatalogPortfolioStack.Outputs.ServiceCatalogLaunchRoleArn

  PlayerAssociationPrincipalArn:
    Value: !GetAtt PlayerStack.Outputs.PlayerUserArn

  PlayerUserName:
    Value: !GetAtt PlayerStack.Outputs.PlayerUserName
  
  PlayerGroupName:
    Value: !GetAtt PlayerStack.Outputs.PlayerGroupName

  PlayerPassword:
    Value: !GetAtt Passwords.Outputs.PlayerPassword

  AWSAccountId:
    Value: !Ref "AWS::AccountId"

  AWSConsoleUrl:
    Value: !Sub 'https://${AWS::AccountId}.signin.aws.amazon.com/console?region=${AWS::Region}'
    Description: URL to access this AWS Account dashboard

  C1WSLog4ShellSite:
    Value: !GetAtt c1wsLog4ShellStack.Outputs.Log4ShellSite
    Description: Tomcat Web App with Log4Shell Vulnerability.
  
  ADFSEndpointDNS:
    Value: !GetAtt adfsStack.Outputs.PublicDNS

# #Sample Challenge Outputs
#   SampleChallengeBucket:
#     Value: !GetAtt Sample.Outputs.CoolBucketName

  V1SOtaskBucketURL:
    Value: !GetAtt V1SOStack.Outputs.V1SOtaskBucket
    Description: Bucket for V1 SO task information (player access required)
  c1csAlbHostname:
    Description: ALB Hostname that the player uses to access the c1cs attack container
    Value: !GetAtt deployC1csAttacks.Outputs.c1csAttackAlbHostname  

  FSSAttackerMachineAccessUrl:
    Value: !GetAtt FSSAttackerEnv.Outputs.FSSAttackAlbHostname
    Description: "Alb hostname for the FSS attack container."
  FSSWebsite:
    Value: !GetAtt FSSStack.Outputs.FSSWebsite
    Description: URL of SudoSingles, the vulnerable application to protect
  FSSBucketToProtect:
    Value: !GetAtt FSSStack.Outputs.FSSBucketToProtect
    Description: The bucket to protect with FSS
  FSSLambdaToProtect:
    Value: !GetAtt FSSStack.Outputs.FSSLambdaToProtect
    Description: Link to the code for the lambda that needs to utilize FSS Scan-On-Get
