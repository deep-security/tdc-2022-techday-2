AWSTemplateFormatVersion: 2010-09-09
Description: Player IAM User.

Parameters:
  PlayerPassword:
    Type: String
    NoEcho: true
  PlayerUserName:
    Type: String
    Default: "Player"
  PlayerGroupName:
    Type: String
    Default: "Players"

Resources:
  Player:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref PlayerPassword
        PasswordResetRequired: false
      UserName: !Ref PlayerUserName
      Groups:
        - !Ref PlayerGroup
      
  PlayerGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Ref PlayerGroupName
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSServiceCatalogEndUserFullAccess

  PlayerPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: "PlayerBasePolicy"
      Groups:
        - !Ref PlayerGroup
      PolicyDocument:
        Statement:
          - Action:
              - ec2:DescribeInstances
              - ssm:DescribeSessions
              - ssm:GetConnectionStatus
              - ssm:DescribeInstanceProperties
              - ssm:ListDocuments
              - ssm:GetParameter
              - ssm:DescribeParameters
              - ssm:PutParameter
              - ssm:CreateAssociation
              - ssm:UpdateAssociation
              - ssm:DescribeDocumentParameters
            Resource: "*"
            Effect: Allow
          - Action:
              - ssm:DescribeInstanceInformation
              - ssm:ListAssociations
              - ssm:DescribeAssociation
              - ssm:DeleteAssociation
              - ssm:ListCommands
              - ssm:ListCommandInvocations
            Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:*'
            Effect: Allow
          - Condition:
              StringLike:
                ssm:resourceTag/PlayerSsmAccess: 'true'
            Action:
              - ssm:StartSession
            Resource: "*"
            Effect: Allow
          - Action:
              - ssm:GetDocument
              - ssm:SendCommand
            Resource:
              - arn:aws:ssm:::document/SSM-SessionManagerRunShell
              - !Sub 'arn:aws:ssm:${AWS::Region}::document/AWS-ConfigureAWSPackage'
            Effect: Allow
          - Action: ssm:TerminateSession
            Resource: arn:aws:ssm:*:*:session/${aws:username}-*
            Effect: Allow
          - Condition:
              StringLike:
                ssm:resourceTag/PlayerSsmDistributorAccess: 'true'
            Action:
              - ssm:SendCommand
            Resource: "*"
            Effect: Allow
          - Action:  # Network Security requirement
              - ec2:DescribeRouteTables
              - ec2:DescribeInternetGateways
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeVpcs
              - ec2:DescribeSubnets
              - ec2:DescribeNatGateways
              - ec2:DescribeVpnGateways
              - ec2:DescribeVpcEndpoints
              - ec2:DescribeVpcEndpointConnections
            Resource: "*"
            Effect: Allow
          - Action:  # Network Security
              - ec2:DeleteRoute
              - ec2:CreateRoute
              - ec2:ReplaceRoute
            Resource: "*"
            Effect: Allow
            Condition:
              StringEquals:
                ec2:ResourceTag/challenge: networksecurity

Outputs:
  PlayerUserArn:
    Value: !GetAtt Player.Arn
  PlayerUserName:
    Value: !Ref PlayerUserName
  PlayerGroupArn:
    Value: !GetAtt PlayerGroup.Arn
  PlayerGroupName:
    Value: !Ref PlayerGroupName
