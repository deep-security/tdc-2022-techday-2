Parameters:

  V1SOtask1info:
    Default: challenges/vision_one/scripts/Hunting_ngrok_Activity_C99.sh.pdf
    Type: String

  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: techday-2021-2
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Default: latest
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and
      forward slash (/).
    Type: String

Resources:

  # Creates CopyZip stack
  CopyZipsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SourceBucket: !Ref QSS3BucketName
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}utils/copyzips/vocopyzips.template.yaml'
      TimeoutInMinutes: 10

  # Run a CopyZip custom resource for the given parameters
  CopyZips:
    Type: Custom::CopyZips
    Properties:
      ServiceToken: !GetAtt 'CopyZipsStack.Outputs.FunctionArn'
      DestBucket: !GetAtt 'CopyZipsStack.Outputs.DestinationBucket'
      SourceBucket: !Ref QSS3BucketName
      Prefix: !Ref QSS3KeyPrefix
      Objects:
      - !Ref V1SOtask1info
      # Add however many objects you need to copy.

  # Define your cool function
  CopyZipsFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !GetAtt CopyZipsStack.Outputs.DestinationBucket # Make sure to set S3Bucket like this.
        S3Key: !Sub '${QSS3KeyPrefix}${V1SOtask1info}' # Make sure to set S3Key like this.
      Handler: index.handler
      Role: !GetAtt CopyZipsFunctionRole.Arn
      Runtime: python3.8
    DependsOn:
      - CopyZipsFunctionRole
      - CopyZips # Don't forget to create this dependecy

  CopyZipsFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

Outputs:
  S3BucketToScanURL:
    Value: !Sub 'https://s3.console.aws.amazon.com/s3/buckets/${fsss3bucket.Outputs.FSSS3BucketObjLambdaName}?region=${AWS::Region}'
    Description: URL of S3 bucket to be use in the challenge