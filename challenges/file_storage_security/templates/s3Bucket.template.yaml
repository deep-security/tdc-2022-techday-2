AWSTemplateFormatVersion: 2010-09-09
Description: S3Bucket and related resources for the FSS challenge

Metadata:
  # cfn_lint: Disable warning for unused parameters
  cfn-lint:
    config:
      ignore_checks:
        - "W2001"

Parameters:
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: techday-2021-2
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    # REFERENCE (tdc-2022-2): Value in this file = latest/challenges/file_storage_security/templates
    Default: ""
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and
      forward slash (/).
    Type: String

  CopyZipsS3Bucket:
    Default: ""
    Type: String
  CopyZipsPrefix:
    Default: ""
    Type: String

  ProfilePictureDropperCodeZip:
    Default: ""
    Type: String

Resources:
  ImageUploaderS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - HEAD
              - PUT
            AllowedOrigins:
              - '*'
  ProfilePictureDropperLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: python3.9
      MemorySize: 128
      Code:
        S3Bucket: !Ref CopyZipsS3Bucket
        S3Key: !Sub '${CopyZipsPrefix}${ProfilePictureDropperCodeZip}' # Make sure to set S3Key like this.
      Environment:
        Variables:
          BUCKET: !Ref ImageUploaderS3Bucket
      Role: !GetAtt ProfilePictureDropperLambdaRole.Arn
      Timeout: 60
  ProfilePictureDropperLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:*'
                Effect: Allow
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${ImageUploaderS3Bucket}/*"
  ProfilePictureDropper:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt ProfilePictureDropperLambda.Arn
    DependsOn: ImageUploaderS3Bucket

Outputs:
  ImageUploaderS3BucketName:
    Value: !Ref ImageUploaderS3Bucket
    Description: Image Uploader S3 Bucket Name
  ImageUploaderS3BucketARN:
    Value: !GetAtt ImageUploaderS3Bucket.Arn
    Description: Image Uploader S3 Bucket arn