AWSTemplateFormatVersion: 2010-09-09
Description: tdc-2022-techday-1 Cloud One Container Security - Deployment

Parameters:
  Environment:
    Description: 'The env name of this stack, default is ''prod'''
    Default: prod
    Type: String
    AllowedValues:
      - dev
      - stg
      - uat
      - prod
  ServiceName:
    Description: String text of service name
    Default: c1cs-ecr
    Type: String


Resources:

# Create iAM Role/Policy
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ServiceName}-codebuild-service-role-${Environment}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com

  CodeBuildServicePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ServiceName}-CodeBuildServicePolicy-${Environment}
      Roles:
        - !Ref CodeBuildServiceRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "arn:aws:logs:*:*:*"
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:PutObject
              - s3:GetBucketAcl
              - s3:GetBucketLocation
            Resource:
              - !Sub "arn:aws:s3:::codepipeline-${AWS::Region}-*/*"
          - Effect: Allow
            Action:
              - codecommit:GitPull
            Resource: !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${ServiceName}"
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:CompleteLayerUpload
              - ecr:InitiateLayerUpload
              - ecr:PutImage
              - ecr:UploadLayerPart
            Resource: "*"
          - Effect: Allow
            Action:
              - ecs:RegisterTaskDefinition
            Resource: "*"
          - Effect: Allow
            Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
            Resource: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${ServiceName}-${Environment}-*"
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource: !GetAtt CodeBuildServiceRole.Arn
          - Effect: Allow
            Action:
              - ec2:DescribeSecurityGroups
              - ec2:DescribeVpcs
              - ec2:DescribeSubnets
              - ec2:DescribeNetworkInterfaces
              - ec2:DeleteNetworkInterface
              - ec2:CreateNetworkInterface
              - ec2:DescribeDhcpOptions
            Resource: "*"
          - Effect: Allow
            Action:
              - ec2:CreateNetworkInterfacePermission
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:network-interface/*"
            Condition:
              StringLike:
                ec2:Subnet:
                  - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*"
                ec2:AuthorizedService: codebuild.amazonaws.com
  
  c1csECR:
    Type: AWS::ECR::Repository
    Properties: 
      ImageTagMutability: MUTABLE
      RepositoryName: !Sub ${ServiceName}-${Environment}
      RepositoryPolicyText: !Sub |
        {
          "Version":"2012-10-17",
          "Statement":[
              {
                "Sid":"CodeBuildAccess",
                "Effect":"Allow",
                "Principal":{
                    "Service":"codebuild.amazonaws.com"
                },
                "Action":[
                  "ecr:BatchGetImage",
                  "ecr:BatchCheckLayerAvailability",
                  "ecr:CompleteLayerUpload",
                  "ecr:GetDownloadUrlForLayer",
                  "ecr:InitiateLayerUpload",
                  "ecr:PutImage",
                  "ecr:UploadLayerPart"
                ],
                "Condition":{
                    "ArnLike":{
                      "aws:SourceArn":"arn:aws:codebuild:*:*:*"
                    },
                    "StringEquals":{
                      "aws:SourceAccount":"${AWS::AccountId}"
                    }
                }
              }
          ]
        }

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ServiceName}-${Environment}
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0-20.03.13
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: CURRENT_ENV
            Type: PLAINTEXT
            Value: !Ref Environment
          - Name: ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref 'AWS::AccountId'
          - Name: SERVICE_NAME
            Type: PLAINTEXT
            Value: !Ref ServiceName
      Source:
        Type: S3
        Location: jeffc-tdc-2022-techday-2/challenges/container_security/templates/dockerFiles.zip
      TimeoutInMinutes: 10
    DependsOn: c1csECR

#  lambdaFunctionInvokeDeployC1CSStateMachine:
#    Description: update description
#    Value: !GetAtt lambdaFunctionInvokeDeployC1CSStateMachine.Arn