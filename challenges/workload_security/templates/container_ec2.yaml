AWSTemplateFormatVersion: 2010-09-09

Parameters:
  QSS3BucketName:
    Type: String
  QSS3KeyPrefix:
    Type: String
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
  AMIID:
    Type: String

Resources:
  DSAkeysRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  DSAkeysProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref DSAkeysRole

  DSA:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref DSAkeysProfile
      ImageId: !Ref AMIID
      InstanceType: m6a.large
      SubnetId: !Ref PublicSubnet1
      Tags:
      - Key: Name
        Value: DSA
      - Key: PlayerSsmAccess
        Value: "false"
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash -x
            sudo su
            sudo yum install -y docker
            sudo yum install -y curl
            download(){  
            until curl -f $@ ; 
            do
            sleep 1
            done
            }
            curl -L "https://github.com/docker/compose/releases/download/v2.4.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod 755 /usr/local/bin/docker-compose
            sudo service docker start
            sudo sed -i -e 's/secure_path = \/sbin:\/bin:\/usr\/sbin:\/usr\/bin/secure_path = \/sbin:\/bin:\/usr\/sbin:\/usr\/bin:\/usr\/local\/bin/' /etc/sudoers
            cd /home/ec2-user
            download -L "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/container-challenge-victim-NodeGoat.zip" -o NodeGoat.zip
            sudo unzip NodeGoat.zip
            cd NodeGoat
            sudo docker-compose build
            sudo docker-compose up -d
            cd /home/ec2-user
            mkdir attacker
            cd attacker
            download -L "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/container-challenge-attacker-Dockerfile" -o Dockerfile
            download -L "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/container-challenge-attacker-run.sh" -o run.sh
            download -L "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/container-challenge-attacker-attack.sh" -o attack.sh
            sudo docker build -t attacker .
            sudo docker run -d --net nodegoat_default attacker
            cd /home/ec2-user
            download -OL https://workload.us-1.cloudone.trendmicro.com:443/software/agent/amzn2/x86_64/agent.rpm
            sudo rpm -i agent.rpm

  WSContainerInstanceARN:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "WS_CONTAINER_INSTANCE"
      Value: !Ref DSA
      Type: String
