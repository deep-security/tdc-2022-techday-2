AWSTemplateFormatVersion: 2010-09-09
Description: >
  SecJam EC2 Template Mapped for us-east-1 and us-west-2
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Deep Security Manager Configuration
      Parameters:
      - DeepSecurityActivationCode
    - Label:
        default: EC2 Configuration
      Parameters:
      - KeyName
    - Label:
        default: SecJam Configuration
      Parameters:
      - QSS3BucketName
      - QSS3KeyPrefix
    ParameterLabels:
      KeyName:
        default: EC2 Key Pair for SSH access
      QSS3BucketName:
        default: Sec Jam S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      DeepSecurityActivationCode:
        default: Activation Code for Deep Security
Parameters:
  KeyName:
    Description: KeyPair for EC2 Instances.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Select an existing EC2 Key Pair.
    Default: "lab-key-pair"
  DSActivationCode:
    Description: AC for DSM, only needed for fastdsm condition
    Type: String
    Default: "DX-86BL-DW9FX-Q6JJZ-W6DEH-BCRF3-BGAEQ"
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: none
    Description: Update to where you hold the scripts. S3 bucket name for the SecJam assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: "-"
    Description: Update to where you hold the scripts. S3 bucket name for the SecJam assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  VPC:
    Type: AWS::EC2::VPC::Id
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
  PlayerPassword:
    Type: String
  SecretPassword:
    Type: String
Mappings:
  AMZN:
    us-east-1:
      AMZN: ami-0323c3dd2da7fb37d
    us-west-2:
      AMZN: ami-0d6621c01e8c2de2c
    us-east-2:
      AMZN: ami-0f7919c33c90f5b58
  DSMRHEL:
    us-east-1:
      DSMRHEL: ami-08e923f2f38197e46
    us-west-2:
      DSMRHEL: ami-0be2c515a090d16b0
    us-east-2:
      DSMRHEL: ami-0aaba9ba5c26d33c7


Resources:
  DSMSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
        GroupDescription: "DSM Security Group"
        VpcId: !Ref VPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 4120
          ToPort: 4120
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 4122
          ToPort: 4122
          CidrIp: 0.0.0.0/0
  DSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSMarketplaceMeteringFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderPublishFindingsToSNSMitigationAction
      Path: /
      Policies:
      - PolicyName: DeepSecurityManagerInstancePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - ec2:DescribeImages
            - ec2:DescribeInstances
            - ec2:DescribeRegions
            - ec2:DescribeSubnets
            - ec2:DescribeTags
            - ec2:DescribeVpcs
            - ec2:DescribeAvailabilityZones
            - ec2:DescribeSecurityGroups
            - workspaces:DescribeWorkspaces
            - workspaces:DescribeWorkspaceDirectories
            - workspaces:DescribeWorkspaceBundles
            - workspaces:DescribeTags
            - iam:ListAccountAliases
            - iam:GetRole
            - iam:GetRolePolicy
            - ec2:DescribeLicenses
            - sts:AssumeRole
            Resource: '*'
  DSMProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref DSMRole
  DSM:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref DSMProfile
      ImageId:
        !FindInMap
        - DSMRHEL
        - !Ref AWS::Region
        - DSMRHEL
      InstanceType: m4.2xlarge
      KeyName: !Ref KeyName
      BlockDeviceMappings:
      - DeviceName: "/dev/sda1"
        Ebs:
          VolumeSize: 25
      - DeviceName: "/dev/xvda"
        Ebs:
          VolumeSize: 100
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet:
            - Ref: DSMSecurityGroup
          SubnetId:
            Ref: PublicSubnet1
      Tags:
      - Key: Name
        Value: DSM
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash -x
            download(){  
            until curl -f $@ ; 
            do
            sleep 1
            done
            }
            sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
            sudo systemctl enable amazon-ssm-agent
            sudo systemctl start amazon-ssm-agent
            echo '${DSActivationCode}' > /opt/DSActivationCode
            echo '${PlayerPassword}' > /opt/DSMPassword
            echo '${SecretPassword}' > /opt/DSMDBPW
            download -o /opt/ChallengePolicies.xml https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}infra/dsm/scripts/Challenge-Policies.xml
            download -o /opt/FastDSM.sh https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}infra/dsm/scripts/fastDSM.sh
            chmod +x /opt/FastDSM.sh
            sh /opt/FastDSM.sh >> /opt/FastDSM.log
  AWSUser:
    Type: AWS::IAM::User
    Properties:
      Path: /
      LoginProfile:
        Password: !Ref PlayerPassword
      Policies:
      - PolicyName: DeepSecurityIAMPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - ec2:DescribeLicenses
            - ec2:DescribeImages
            - ec2:DescribeInstances
            - ec2:DescribeRegions
            - ec2:DescribeSubnets
            - ec2:DescribeTags
            - ec2:DescribeVpcs
            - iam:ListAccountAliases
            - ec2:DescribeAvailabilityZones
            - ec2:DescribeSecurityGroups
            - iam:ListAccountAliases
            - iam:GetRole
            - iam:GetRolePolicy
            Resource: '*'
  AWSAccessKey:
    Type: AWS::IAM::AccessKey
    DependsOn: AWSUser
    Properties:
      UserName:
        !Ref AWSUser
Outputs:
  DSMURL:
    Value: !Sub 'https://${DSM.PublicDnsName}'
  DSMFQDN:
    Value: !GetAtt DSM.PublicDnsName
  DSMSecurityGroup:
    Value: !GetAtt DSMSecurityGroup.GroupId
